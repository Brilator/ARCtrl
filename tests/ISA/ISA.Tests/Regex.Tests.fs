module Regex.Tests

open ISA

#if FABLE_COMPILER
open Fable.Mocha
#else
open Expecto
#endif

let tests_AutoGeneratedTableName = 
    testList "AutoGeneratedTableName" [
        testCase "match" (fun () ->
            let testString = @"New Table 10"
            let number = 
                match testString with
                | Regex.ActivePatterns.AutoGeneratedTableName num -> Some num
                | _ -> None
            Expect.isSome number "isSome"
            Expect.equal number.Value 10 ""
        )
        testCase "no match, no number" (fun () ->
            let testString = @"New Table Testing"
            let number = 
                match testString with
                | Regex.ActivePatterns.AutoGeneratedTableName num -> Some num
                | _ -> None
            Expect.isNone number ""
        )
        testCase "no match, wrong start" (fun () ->
            let testString = @"My New Table"
            let number = 
                match testString with
                | Regex.ActivePatterns.AutoGeneratedTableName num -> Some num
                | _ -> None
            Expect.isNone number ""
        )
        testCase "no match, wrong end mixed" (fun () ->
            let testString = @"New Table 10 x20"
            let number = 
                match testString with
                | Regex.ActivePatterns.AutoGeneratedTableName num -> Some num
                | _ -> None
            Expect.isNone number ""
        )
        testCase "no match, wrong end numbers" (fun () ->
            let testString = @"New Table 10 20"
            let number = 
                match testString with
                | Regex.ActivePatterns.AutoGeneratedTableName num -> Some num
                | _ -> None
            Expect.isNone number ""
        )
    ]

let main = 
    testList "Regex" [
        tests_AutoGeneratedTableName
    ]

